image(nul)
library(netassoc)
nsp <- 10
nsites <- 100
ninteractions <- 20
w <- 0.8
frac_pos <- 0.5
meanabund <- 10
nul <- matrix(rpois(n=nsp*nsites,meanabund),nrow=nsp,ncol=nsites)
net_true <- erdos.renyi.game(n=nsp,directed=F,p.or.m=ninteractions, type="gnm")
edges_true <- data.frame(get.edgelist(net_true),ifelse(rbinom(ecount(net_true),1,frac_pos),1,-1))
names(edges_true) <- c("spa","spb","sign")
obs <- nul
for (i in 1:nrow(edges_true))
{
spa_this <- edges_true$spa[i]
spb_this <- edges_true$spb[i]
weight_this <- edges_true$sign[i]
obstemp <- obs
obs[spa_this,] <- w*obstemp[spa_this,]+weight_this*(1-w)*obstemp[spb_this,]
obs[spb_this,] <- w*obstemp[spa_this,]+weight_this*(1-w)*obstemp[spb_this,]
}
par(mfrow=c(1,2))
image(obs)
image(nul)
makenetwork(obs, nul)
?makenetwork
makenetwork(obs, nul)
library(netassoc)
net_inf <- makenetwork(obs, nul)
library(netassoc)
net_inf <- makenetwork(obs, nul)
?makenetwork
net_inf
net_in$network_all
net_inf$network_all
net_true
plot(net_true,layout=layout.circle)
plot(net_inf$network_all,layout=layout.circle)
plotnetassoc(net_inf$network_all,layout=layout.circle)
plotnetassoc(net_inf$network_all,layout=layout.auto)
plotnetassoc(net_inf$network_all,layout=layout.auto(net_inf$network_all))
plotnetassoc(net_inf$network_all,layout=layout.auto(net_true))
par(mfrow=c(1,2))
plotnetassoc(net_inf$network_all,layout=layout.auto(net_true))
plotnetassoc(net_true,layout=layout.auto(net_true))
nul <- matrix(rpois(n=nsp*nsites,meanabund),nrow=nsp,ncol=nsites,dimnames=list(paste("Species",1:nsp),paste("Site",1:nsites)))
library(netassoc)
nsp <- 10
nsites <- 100
ninteractions <- 20
w <- 0.8
frac_pos <- 0.5
meanabund <- 10
nul <- matrix(rpois(n=nsp*nsites,meanabund),nrow=nsp,ncol=nsites,dimnames=list(paste("Species",1:nsp),paste("Site",1:nsites)))
net_true <- erdos.renyi.game(n=nsp,directed=F,p.or.m=ninteractions, type="gnm")
edges_true <- data.frame(get.edgelist(net_true),ifelse(rbinom(ecount(net_true),1,frac_pos),1,-1))
names(edges_true) <- c("spa","spb","sign")
obs <- nul
for (i in 1:nrow(edges_true))
{
spa_this <- edges_true$spa[i]
spb_this <- edges_true$spb[i]
weight_this <- edges_true$sign[i]
obstemp <- obs
obs[spa_this,] <- w*obstemp[spa_this,]+weight_this*(1-w)*obstemp[spb_this,]
obs[spb_this,] <- w*obstemp[spa_this,]+weight_this*(1-w)*obstemp[spb_this,]
}
net_inf <- makenetwork(obs, nul)$net_inf
par(mfrow=c(1,2))
l <- layout.auto(net_true)
plotnetassoc(net_inf,layout=l)
plotnetassoc(net_true,layout=l)
library(netassoc)
nsp <- 10
nsites <- 100
ninteractions <- 20
w <- 0.8
frac_pos <- 0.5
meanabund <- 10
nul <- matrix(rpois(n=nsp*nsites,meanabund),nrow=nsp,ncol=nsites,dimnames=list(paste("Species",1:nsp),paste("Site",1:nsites)))
net_true <- erdos.renyi.game(n=nsp,directed=F,p.or.m=ninteractions, type="gnm")
edges_true <- data.frame(get.edgelist(net_true),ifelse(rbinom(ecount(net_true),1,frac_pos),1,-1))
names(edges_true) <- c("spa","spb","sign")
obs <- nul
for (i in 1:nrow(edges_true))
{
spa_this <- edges_true$spa[i]
spb_this <- edges_true$spb[i]
weight_this <- edges_true$sign[i]
obstemp <- obs
obs[spa_this,] <- w*obstemp[spa_this,]+weight_this*(1-w)*obstemp[spb_this,]
obs[spb_this,] <- w*obstemp[spa_this,]+weight_this*(1-w)*obstemp[spb_this,]
}
net_inf <- makenetwork(obs, nul)
par(mfrow=c(1,2))
l <- layout.auto(net_true)
plotnetassoc(net_inf,layout=l)
plotnetassoc(net_true,layout=l)
par(mfrow=c(1,2))
l <- layout.auto(net_true)
plotnetassoc(net_inf$network_all,layout=l)
plotnetassoc(net_true,layout=l)
library(netassoc)
nsp <- 10
nsites <- 100
ninteractions <- 20
w <- 0.8
frac_pos <- 0.5
meanabund <- 10
nul <- matrix(rpois(n=nsp*nsites,meanabund),nrow=nsp,ncol=nsites,dimnames=list(paste("Species",1:nsp),paste("Site",1:nsites)))
net_true <- erdos.renyi.game(n=nsp,directed=F,p.or.m=ninteractions, type="gnm")
V(net_true)$name <- paste("Species",1:nsp)
edges_true <- data.frame(get.edgelist(net_true),ifelse(rbinom(ecount(net_true),1,frac_pos),1,-1))
names(edges_true) <- c("spa","spb","sign")
obs <- nul
for (i in 1:nrow(edges_true))
{
spa_this <- edges_true$spa[i]
spb_this <- edges_true$spb[i]
weight_this <- edges_true$sign[i]
obstemp <- obs
obs[spa_this,] <- w*obstemp[spa_this,]+weight_this*(1-w)*obstemp[spb_this,]
obs[spb_this,] <- w*obstemp[spa_this,]+weight_this*(1-w)*obstemp[spb_this,]
}
net_inf <- makenetwork(obs, nul)
par(mfrow=c(1,2))
l <- layout.auto(net_true)
plotnetassoc(net_inf$network_all,layout=l)
plotnetassoc(net_true,layout=l)
net_true
library(netassoc)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
library(netassoc)
at=1:length(dimnames(data)[[1]]),
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
debug(plot_netassoc_matrix)
prompt(plot_netassoc_matrix)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
library(netassoc)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
library(netassoc)
library(netassoc)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE)
traceback()
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=FALSE,alpha=0.5)
# plot
plotnetassoc(n$network_all)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=50, plot=TRUE,alpha=0.5)
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=5, plot=TRUE,alpha=0.5)
library(netassoc)
# generate random data
set.seed(1)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=5, plot=TRUE,alpha=0.5)
# generate random data
set.seed(5)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=5, plot=TRUE,alpha=0.5)
# generate random data
set.seed(5)
nsp <- 10
nsi <- 5
m_obs <- floor(matrix(rgamma(nsp*nsi,shape=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rexp(nsp*nsi,rate=0.05),ncol=nsi,nrow=nsp))
n <- makenetwork(m_obs, m_nul, numnulls=100, plot=TRUE,alpha=0.5)
n
prompt(plot_netassoc_matrix)
nsp <- 10
nsites <- 30
obs <- matrix(rpois(n=nsp*nsites,meanabund),nrow=nsp,ncol=nsites,dimnames=list(paste("Species",1:nsp),paste("Site",1:nsites)))
nsp <- 10
nsites <- 30
obs <- matrix(rpois(n=nsp*nsites,10),nrow=nsp,ncol=nsites,dimnames=list(paste("Species",1:nsp),paste("Site",1:nsites)))
?heat.colors
library(netassoc)
nsp <- 10
nsites <- 30
obs <- matrix(rpois(n=nsp*nsites,10),nrow=nsp,ncol=nsites,dimnames=list(paste("Species",1:nsp),paste("Site",1:nsites)))
plot_netassoc_matrix(obs, onesided=TRUE, col=heat.colors(5))
intxns <- matrix(rnorm(n=nsp^2),nrow=nsp,ncol=nsp,dimnames=list(paste("Species",1:nsp),paste("Species",1:nsp)))
intxns
intxns <- matrix(rnorm(n=nsp^2),nrow=nsp,ncol=nsp,dimnames=list(paste("Species",1:nsp),paste("Species",1:nsp)))
plot_netassoc_matrix(obs, onesided=FALSE, col=colorRampPalette(c("red","white","blue"))(5))
intxns <- matrix(rnorm(n=nsp^2),nrow=nsp,ncol=nsp,dimnames=list(paste("Species",1:nsp),paste("Species",1:nsp)))
plot_netassoc_matrix(obs, onesided=FALSE, col=colorRampPalette(c("red","white","blue"))(50))
intxns
colorRampPalette(c("red","white","blue"))(50)
plot_netassoc_matrix(obs, onesided=TRUE, col=colorRampPalette(c("red","white","blue"))(50))
plot_netassoc_matrix(obs, onesided=TRUE, col=colorRampPalette(c("red","white","blue"))(50))
plot_netassoc_matrix(obs, onesided=FALSE, col=colorRampPalette(c("red","white","blue"))(50))
int <- matrix(rnorm(n=nsp^2),nrow=nsp,ncol=nsp,dimnames=list(paste("Species",1:nsp),paste("Species",1:nsp)))
plot_netassoc_matrix(int, onesided=TRUE, col=colorRampPalette(c("red","white","blue"))(50))
int <- matrix(rnorm(n=nsp^2),nrow=nsp,ncol=nsp,dimnames=list(paste("Species",1:nsp),paste("Species",1:nsp)))
plot_netassoc_matrix(int, onesided=FALSE, col=colorRampPalette(c("red","white","blue"))(50))
library(netassoc)
library(netassoc)
library(netassoc)
library(netassoc)
?invcov.shrink
library(corpcor)
invcov.shrink
?invcov.shrink
library(huge)
?huge
?huge.select
library(netassoc)
library(netassoc)
set.seed(1)
nsp <- 10
nsi <- 50
m_obs <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_obs[1,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
m_obs[2,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
n <- make_netassoc_network(m_obs,
method="shrinkage",p.method='fdr',
numnulls=100, plot=TRUE,alpha=0.05)
library(netassoc)
set.seed(1)
nsp <- 10
nsi <- 50
m_obs <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_obs[1,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
m_obs[2,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
n <- make_netassoc_network(m_obs,
method="shrinkage",p.method='fdr',
numnulls=100, plot=TRUE,alpha=0.05)
set.seed(1)
nsp <- 10
nsi <- 50
m_obs <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_obs[1,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
m_obs[2,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
n <- make_netassoc_network(m_obs,
method="shrinkage",p.method='fdr',
numnulls=100, plot=TRUE,alpha=0.05,verbose=F)
library(netassoc)
?igraph
library.igraph
library(igraph)
sessionInfo()
install.packages('igraph',source=T)
install.packages("igraph", source = T)
?install.packages
install.packages('igraph',type="source")
library(igraph)
install.packages("igraph")
install.packages("ggplot2")
install.packages(c("rags2ridges","corpcor","vegan","huge"))
library(netassoc)
library(netassoc)
setwd("~/Documents/BIEN projects/coexistence networks/revisions - analysis aug 2015/real analysis")
# convert other input
zloess <- readRDS('pss_loess_13.03.2015.rdata')
zmaxent <- readRDS('pss_sdm_13.03.2015.rdata')
zobs <- readRDS('oss_13.03.2015.rdata')
rn <- intersect(intersect(rownames(zmaxent), rownames(zloess)),rownames(zobs))
cn <- intersect(intersect(colnames(zmaxent), colnames(zloess)), colnames(zobs))
dropcols1 <- union(union(names(which(is.na(colSums(zloess)))),names(which(is.na(colSums(zmaxent))))),names(which(is.na(colSums(zobs)))))
dropcols <- unique(c(dropcols1, names(which(colSums(zobs)==0)), names(which(colSums(zmaxent)==0)), names(which(colSums(zloess)==0))))
droprows <- unique(c(names(which(is.infinite(rowSums(zmaxent)))), names(which(rowSums(zobs)==0)), names(which(rowSums(zmaxent)==0)), names(which(rowSums(zloess)==0))))
cn_trimmed <- setdiff(cn, dropcols)
rn_trimmed <- setdiff(rn, droprows)
zmaxent_trimmed <- zmaxent[rn_trimmed, cn_trimmed]
zloess_trimmed <- zloess[rn_trimmed, cn_trimmed]
zobs_trimmed <- zobs[rn_trimmed, cn_trimmed]
# make sure all matrices have same dimensions
stopifnot(all(apply(sapply(list(zloess_trimmed, zmaxent_trimmed, zobs_trimmed),dim),1,sd)==0))
saveRDS(zloess_trimmed, file='input_nul_loess.Rdata')
saveRDS(zmaxent_trimmed, file='input_nul_maxent.Rdata')
saveRDS(zobs_trimmed, file='input_obs.Rdata')
?make_netassoc_network
inputs <-
expand.grid(
alpha=c(0.05,0.5),
method=c("shrinkage","ridge"),
obsname='input_obs.Rdata',
nulname=c('input_nul_loess.Rdata','input_nul_maxent.Rdata'),
nnulls=c(1000,10000),
stringsAsFactors=F)
ilist <- vector("list",nrow(inputs))
for (i in 1:nrow(inputs))
{
ilist[[i]] <- data.frame(inputs[i,])
}
library(netassoc)
library(parallel)
set.seed(1) # choose RNG seed
ncores <- 1
options(error=dump.frames)
allr <- mclapply(ilist, mc.cores=ncores, FUN=function(x)
{
x <- as.vector(x)
of <- paste(c('out',x[1,"obsname"], x[1,"nulname"], x[1,"method"], x[1,"alpha"],x[1,"nnulls"]),collapse="_")
print(of)
net <- make_netassoc_network(
obs=readRDS(x[1,"obsname"]),
nul=readRDS(x[1,"nulname"]),
method=x[1,"method"],
alpha=x[1,"alpha"],
numnulls=x[1,"nnulls"],
plot=FALSE,
verbose=FALSE
)
saveRDS(object=net, file=sprintf("%s.rdata",of))
return(NULL)
}
)
library(netassoc)
library(netassoc)
library(netassoc)
set.seed(1)
nsp <- 10
nsi <- 50
m_obs <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_obs[1,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
m_obs[2,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
pdf(file='temp.pdf',width=6,height=6)
par(mar=c(4,4,1,1))
n <- make_netassoc_network(m_obs, m_nul,
method="shrinkage",p.method='fdr',
numnulls=100, plot=TRUE,alpha=0.05, plot.legend=F, plot.title=F)
dev.off()
library(netassoc)
library(netassoc)
set.seed(1)
nsp <- 10
nsi <- 50
m_obs <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_obs[1,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
m_obs[2,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
pdf(file='temp.pdf',width=6,height=6)
par(mar=c(4,4,1,1))
n <- make_netassoc_network(m_obs, m_nul,
method="shrinkage",p.method='fdr',
numnulls=100, plot=TRUE,alpha=0.05, plot.legend=F, plot.title=F)
dev.off()
library(netassoc)
dev.off()rint()
library(netassoc)
library(netassoc)
set.seed(1)
nsp <- 10
nsi <- 50
m_obs <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_obs[1,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
m_obs[2,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
pdf(file='temp.pdf',width=6,height=6)
par(mar=c(4,4,1,1))
n <- make_netassoc_network(m_obs, m_nul,
method="shrinkage",p.method='fdr',
numnulls=100, plot=TRUE,alpha=0.05, plot.legend=F, plot.title=F)
dev.off()
library(netassoc)
set.seed(1)
nsp <- 10
nsi <- 50
m_obs <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_obs[1,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
m_obs[2,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
pdf(file='temp.pdf',width=6,height=6)
par(mar=c(4,4,1,1))
n <- make_netassoc_network(m_obs, m_nul,
method="shrinkage",p.method='fdr',
numnulls=100, plot=TRUE,alpha=0.05, plot.legend=F, plot.title=F)
dev.off()
library(netassoc)
set.seed(1)
nsp <- 10
nsi <- 50
m_obs <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_obs[1,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
m_obs[2,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
pdf(file='temp.pdf',width=6,height=6)
par(mar=c(4,4,1,1))
n <- make_netassoc_network(m_obs, m_nul,
method="shrinkage",p.method='fdr',
numnulls=100, plot=TRUE,alpha=0.05, plot.legend=F, plot.title=F)
dev.off()
library(netassoc)
set.seed(1)
nsp <- 10
nsi <- 50
m_obs <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_nul <- floor(matrix(rpois(nsp*nsi,lambda=5),ncol=nsi,nrow=nsp))
m_obs[1,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
m_obs[2,1:(nsi/2)] <- rpois(n=nsi/2,lambda=20)
pdf(file='temp.pdf',width=6,height=6)
par(mar=c(4,4,1,1))
n <- make_netassoc_network(m_obs, m_nul,
method="shrinkage",p.method='fdr',
numnulls=100, plot=TRUE,alpha=0.05, plot.legend=F, plot.title=F)
dev.off()
getwd()
